Recently a security committee decided to enforce the following rules
when an employee creates/changes his/her password. 
  - The password must contain atleast one special character among # ! _ $ @ 
  - The password must contain atleast two numbers 
  - The password must contain atleast one upper case alphabet and one lower case alphabet. 
  - The password must have a minimum length of 8. 
  - The password must have a maximum length of 25. 
The program must accept a given password string P as input and
check for these rules and output VALID or INVALID. 
Boundary Conditions: 
  Length of P is from 2 to 50. 
    
Input Format: 
  First line will contain the string value of the password P 
Output Format: 
  VALID or INVALID based on the check performed by the program by applying the rules. 
  
Example Input/Output: 
Example 1: 
Input: 
kiC_3b0x3r
Output: VALID 

Example 2: 
Input: 
m@d31nindia 
Output: 
INVALID 
Explanation: No alphabet in uppercase. 

#include<stdio.h>
#include <stdlib.h>

int main()
{
    char a[50];
    scanf("%s",a);
    int n = strlen(a);
    if(n<8 || n>25)
    {
        printf("INVALID");
        return 0;
    }
    int up=0,lo=0,num=0,spl=0;
    for(int i=0;i<n;i++)
    {
        if(isupper(a[i]))
            up=1;
        else if(islower(a[i]))
            lo=1;
        else if(a[i]>='0' && a[i]<='9')
            num++;
        else
            spl=1;
    }
    if(up && lo && spl && num>=2)
        printf("VALID");
    else
        printf("INVALID");
}
